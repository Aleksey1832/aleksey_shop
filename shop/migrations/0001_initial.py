# Generated by Django 5.2a1 on 2025-06-12 12:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Категории товара')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL-категории товара')),
            ],
            options={
                'verbose_name': 'Категория товара',
                'verbose_name_plural': 'Категории товаров',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_catego_name_289c7e_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductConstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Конструкция товара',
                'verbose_name_plural': 'Конструкции товаров',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_produc_name_e067e4_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductFireclass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Класс пожара')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL-класса пожара')),
            ],
            options={
                'verbose_name': 'Класс пожара',
                'verbose_name_plural': 'Класс пожара',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_produc_name_5dbfa2_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductRangModelHearth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Модельный очаг пожара')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL-очага пожара')),
            ],
            options={
                'verbose_name': 'Ранг модельного очага',
                'verbose_name_plural': 'Ранг модельного очага',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_produc_name_0a2b78_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Тип товара')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL-типа товара')),
            ],
            options={
                'verbose_name': 'Тип товара',
                'verbose_name_plural': 'Тип товара',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_produc_name_9e69cc_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Применение товара')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Применение товара',
                'verbose_name_plural': 'Применение товаров',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_produc_name_53a945_idx')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('product_code', models.IntegerField(default=0, verbose_name='Код товара')),
                ('price', models.DecimalField(decimal_places=0, max_digits=7, verbose_name='Цена')),
                ('image', models.ImageField(upload_to='product_img', verbose_name='Фото')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создание товара')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменение товара')),
                ('available', models.BooleanField(default=True, verbose_name='Наличие товара')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL-товара')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category', verbose_name='Категория товара')),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.productconstruction', verbose_name='Конструкция товара')),
                ('fire_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.productfireclass', verbose_name='Класс пожара')),
                ('rang_model_hearth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.productrangmodelhearth', verbose_name='Модельный очаг пожара')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.producttype', verbose_name='Тип товара')),
                ('usage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.productusage', verbose_name='Применение товара')),
            ],
            options={
                'verbose_name': 'Товара',
                'verbose_name_plural': 'Все товары',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='shop.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['id', 'slug'], name='shop_produc_id_f21274_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='shop_produc_name_a2070e_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['-created_at'], name='shop_produc_created_ddfb00_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('product', 'user')},
        ),
    ]
